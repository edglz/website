<div id='dot'>
  <div class='dot-layer'></div>
  <div class='dot-layer'></div>
  <div class='dot-layer'></div>
</div>

<style>
  #dot {
    position: fixed;
    left: 50%;
    top: 50%;
    translate: -50% -50%;
    z-index: 100;
    pointer-events: none;
    display: none;

    @media screen and (min-width: 600px) {
      display: block;
    }
  }

  .dot-layer {
    position: absolute;
    width: 10px;
    aspect-ratio: 1;
    border-radius: 50%;
    background: hsl(var(--background));
    mix-blend-mode: difference;

    animation: pulse 3s ease-in-out infinite;

    &:nth-child(2) {
      animation-delay: 0.5s;
      scale: 0.8;
    }

    &:nth-child(3) {
      animation-delay: 1s;
      scale: 0.6;
    }
  }

  html.dark .dot-layer {
    background: hsl(var(--foreground));
  }

  @keyframes pulse {
    0% {
      scale: 0.8;
    }

    100% {
      scale: 1;
    }
  }
</style>

<script>
  function setupTracker() {
    const dot = document.getElementById('dot');

    function handlePointerMove(event: PointerEvent) {
      const { clientX, clientY } = event;

      if (dot) {
        dot.animate(
          {
            left: `${clientX}px`,
            top: `${clientY}px`,
          },
          { duration: 3000, fill: 'forwards' }
        );
      }
    }

    document.body.addEventListener('pointermove', handlePointerMove);

    return () => {
      document.body.removeEventListener('pointermove', handlePointerMove);
    };
  }

  // Initialize on page load
  let cleanup: (() => void) | undefined;

  document.addEventListener('astro:page-load', () => {
    cleanup?.();
    cleanup = setupTracker();
  });

  // Cleanup before page transitions
  document.addEventListener('astro:before-swap', () => {
    cleanup?.();
  });

  // Initial setup
  cleanup = setupTracker();
</script>
